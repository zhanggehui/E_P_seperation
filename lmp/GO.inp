variable debug equal 1

### build system ################################################################
units real
newton off
boundary p p f
pair_style lj/cut/coul/cut 10.0
pair_modify shift yes mix geometric
atom_style full
bond_style harmonic
angle_style harmonic
special_bonds lj/coul 0.0 0.0 0.5
read_data /home/liufeng_pkuhpc/lustre3/zgh/GO_MD/receive/NA_pool/0.7/GO.data extra/atom/types 1
### build atom walls ####
mass 16 15.9994  # wall atom, same as O
pair_coeff 16 16 0.1521 3.1505742268315 10.0
lattice sc 2
variable zz internal 0.0
variable v equal "v_zz == -zlat*floor(-zlo/zlat) || v_zz == zlat*floor(zhi/zlat)"
create_atoms 16 box var v set z zz
lattice none 1
change_box all boundary p p s

if "${debug} > 0" then &
"write_data system.data" &
"write_coeff system.coeff"

### group definition ########################################################
group gra type 1:4
group go type 1:11
group walls type 16
group water type 12 13

variable gra_zhi equal bound(gra,zmax)
variable gra_zlo equal bound(gra,zmin)
region up_box block EDGE EDGE EDGE EDGE $(v_gra_zhi) EDGE
region low_box block EDGE EDGE EDGE EDGE EDGE $(v_gra_zlo)

### wall group ###
variable g_atom_v atom grmask(walls,up_box)
group up_wall variable g_atom_v

variable g_atom_v atom grmask(walls,low_box) 
group low_wall variable g_atom_v

### sol group ###
group sol subtract all go walls

variable g_atom_v atom grmask(sol,up_box)
group up_sol variable g_atom_v
group up_sol include molecule

variable g_atom_v atom grmask(sol,low_box)
group low_sol variable g_atom_v
group low_sol include molecule

group mid_sol subtract sol up_sol low_sol

group sol delete

### minimize #############################################################
if "${debug} > 0" then &
"dump check all atom 100 check.dump"

group fix_atoms union gra walls
fix freeze fix_atoms setforce 0 0 0
thermo_style custom step temp epair emol etotal press fmax
thermo 10
min_style sd
minimize 0.0 1.0e-8 2000 20000
unfix freeze
group fix_atoms delete

### euqilibrium #############################################################
group control_atoms union gra walls
group free_atoms subtract all control_atoms
group control_atoms delete

variable f_upwall equal fcm(up_wall,z)
variable f_lowwall equal fcm(low_wall,z)

variable den_ratio equal 10/6.022
variable xy_area equal lx*ly

variable up_vol equal "(zhi-v_gra_zhi)/lz*vol"
variable low_vol equal "(v_gra_zlo-zlo)/lz*vol"
variable den_up equal mass(up_sol)/v_up_vol*v_den_ratio
variable den_low equal mass(low_sol)/v_low_vol*v_den_ratio

thermo_style custom step temp etotal press v_f_upwall v_f_lowwall v_den_up v_den_low vol

variable target_den equal 1.0 #g/cm3
variable up_z equal mass(up_sol)/(v_xy_area*(v_target_den/v_den_ratio))+v_gra_zhi
variable low_z equal v_gra_zlo-mass(low_sol)/(v_xy_area*(v_target_den/v_den_ratio))

variable step_move index 10000
variable up_move equal ($(v_up_z)-$(zhi))/${step_move}
variable low_move equal ($(v_low_z)-$(zlo))/${step_move}
variable zero_move equal 0.0
fix move_upwall up_wall move variable NULL NULL v_up_move v_zero_move v_zero_move NULL
fix move_lowwall low_wall move variable NULL NULL v_low_move v_zero_move v_zero_move NULL

fix fix_gra gra setforce 0 0 0
fix h_bonds_shake all shake 0.0001 20 10000 b 5 8 9 a 11
velocity free_atoms create 300 30315 dist gaussian
fix nvt free_atoms nvt temp 300 300 100.0

thermo 1000
if "${debug} > 0" then &
"run ${step_move}" &
else &
"run ${step_move}"

write_dump all atom equ.data
if "${debug} > 0" then &
"undump check"

### pressure control ###################################################

### press down #########################################################
